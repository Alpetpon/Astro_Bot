from datetime import datetime
from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.exceptions import TelegramBadRequest

from database import get_db, User
from data import get_active_consultations, get_consultation_by_slug, get_consultation_option
from keyboards import (
    get_consultations_keyboard,
    get_consultation_detail_keyboard,
    get_consultation_options_keyboard,
    get_back_keyboard
)

router = Router()


@router.callback_query(F.data == "consultations")
async def show_consultations_catalog(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π"""
    db = get_db()
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        user = db.query(User).filter(User.telegram_id == callback.from_user.id).first()
        if user:
            user.last_activity = datetime.utcnow()
            db.commit()
        
        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–∑ JSON
        consultations = get_active_consultations()
        
        if not consultations:
            text = "üîÆ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π."
            markup = get_back_keyboard("main_menu")
        else:
            text = "üîÆ **–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏**\n\n"
            text += "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —É—Å–ª—É–≥—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:"
            markup = get_consultations_keyboard(consultations)
        
        try:
            await callback.message.edit_text(
                text,
                reply_markup=markup,
                parse_mode="Markdown"
            )
        except Exception:
            # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            if callback.message.video:
                # –ï—Å–ª–∏ –≤–∏–¥–µ–æ - –ù–ï —É–¥–∞–ª—è–µ–º
                await callback.bot.send_message(
                    chat_id=callback.message.chat.id,
                    text=text,
                    reply_markup=markup,
                    parse_mode="Markdown"
                )
            else:
                # –ï—Å–ª–∏ —Ñ–æ—Ç–æ - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                try:
                    await callback.message.delete()
                except Exception:
                    pass
                
                await callback.bot.send_message(
                    chat_id=callback.message.chat.id,
                    text=text,
                    reply_markup=markup,
                    parse_mode="Markdown"
                )
        
        await callback.answer()
    
    finally:
        db.close()


# –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω - –∑–∞–ø–∏—Å—å –∏–¥–µ—Ç —á–µ—Ä–µ–∑ Telegram
# @router.callback_query(F.data.startswith("consultation_book_"))
# async def show_consultation_booking(callback: CallbackQuery):
#     """–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏"""
#     # –¢–µ–ø–µ—Ä—å –∫–Ω–æ–ø–∫–∞ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è" –≤–µ–¥–µ—Ç –Ω–∞–ø—Ä—è–º—É—é –≤ Telegram


@router.callback_query(F.data.startswith("consultation_"))
async def show_consultation_detail(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"""
    # –ò–∑–≤–ª–µ–∫–∞–µ–º slug –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    parts = callback.data.split("_")
    
    if len(parts) < 2:
        await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏", show_alert=True)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä
    if parts[1] == "info":
        consultation_slug = "_".join(parts[2:])
        show_section = "info"
    elif parts[1] == "details":
        consultation_slug = "_".join(parts[2:])
        show_section = "details"
    elif parts[1] == "price":
        consultation_slug = "_".join(parts[2:])
        show_section = "price"
    else:
        consultation_slug = "_".join(parts[1:])
        show_section = "info"
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏–∑ JSON
    consultation = get_consultation_by_slug(consultation_slug)
    
    if not consultation:
        await callback.answer("–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–µ–∫—Ü–∏–∏
    emoji = consultation.get('emoji', 'üîÆ')
    
    if show_section == "info":
        text = f"{emoji} **{consultation['name']}**\n\n"
        
        if consultation.get('short_description'):
            text += f"{consultation['short_description']}\n\n"
        
        if consultation.get('for_whom'):
            text += f"**–î–ª—è –∫–æ–≥–æ —ç—Ç–æ:**\n{consultation['for_whom']}\n\n"
        
        if consultation.get('duration'):
            text += f"‚è± **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {consultation['duration']}\n"
        
        if consultation.get('price'):
            text += f"üí∞ **–°—Ç–æ–∏–º–æ—Å—Ç—å:** {consultation['price']:,.0f} ‚ÇΩ\n"
    
    elif show_section == "details":
        text = f"{emoji} **{consultation['name']}**\n\n"
        
        if consultation.get('what_included'):
            text += "**–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç:**\n"
            for item in consultation['what_included']:
                text += f"‚Ä¢ {item}\n"
            text += "\n"
        
        if consultation.get('format_info'):
            text += f"**–§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã:**\n{consultation['format_info']}\n\n"
        
        if consultation.get('result'):
            text += f"**–†–µ–∑—É–ª—å—Ç–∞—Ç:**\n{consultation['result']}\n"
    
    elif show_section == "price":
        text = f"{emoji} **{consultation['name']}**\n\n"
        
        options = consultation.get('options', [])
        active_options = [o for o in options if o.get('is_active', True)]
        
        if active_options:
            text += "**–í–∞—Ä–∏–∞–Ω—Ç—ã –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å:**\n\n"
            
            for option in active_options:
                text += f"**{option['name']}** ‚Äî {option['price']:,.0f} ‚ÇΩ\n"
                if option.get('description'):
                    text += f"{option['description']}\n"
                
                if option.get('duration'):
                    text += f"‚è± {option['duration']}\n"
                
                if option.get('features'):
                    for feature in option['features']:
                        text += f"  ‚Ä¢ {feature}\n"
                
                text += "\n"
        else:
            if consultation.get('price'):
                text += f"**–°—Ç–æ–∏–º–æ—Å—Ç—å:** {consultation['price']:,.0f} ‚ÇΩ\n\n"
            if consultation.get('duration'):
                text += f"**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {consultation['duration']}\n"
    
    try:
        await callback.message.edit_text(
            text,
            reply_markup=get_consultation_detail_keyboard(consultation_slug),
            parse_mode="Markdown"
        )
    except TelegramBadRequest:
        # –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
        pass
    
    await callback.answer()
