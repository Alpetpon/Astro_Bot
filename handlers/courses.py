from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.exceptions import TelegramBadRequest

from database import get_db, UserRepository
from data import get_active_courses, get_course_by_slug, get_tariff_by_id, get_course_modules
from keyboards import (
    get_courses_keyboard,
    get_course_detail_keyboard,
    get_back_keyboard
)

router = Router()


@router.callback_query(F.data == "courses")
async def show_courses_catalog(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –∫—É—Ä—Å–æ–≤"""
    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db = await get_db()
    user_repo = UserRepository(db)
    await user_repo.update_activity(callback.from_user.id)
    
    text = "üìö **–ö–∞—Ç–∞–ª–æ–≥ –∫—É—Ä—Å–æ–≤**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∫—É—Ä—Å:"
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º –∫—É—Ä—Å–æ–º –ø–µ—Ä–≤—ã–º
    buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–µ—Ä–≤–æ–π
    buttons.append([InlineKeyboardButton(
        text="üîÆ –°–æ—Å—Ç–∞–≤—å –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
        callback_data="free_natal_chart"
    )])
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—Å—ã –∏–∑ JSON
    courses = get_active_courses()
    
    for course in courses:
        emoji = course.get('emoji', 'üìö')
        name = course.get('name', '')
        slug = course.get('slug', '')
        
        buttons.append([InlineKeyboardButton(
            text=f"{emoji} {name}",
            callback_data=f"course_{slug}"
        )])
    
    buttons.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_navigation")])
    
    markup = InlineKeyboardMarkup(inline_keyboard=buttons)
    
    try:
        # –ï—Å–ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if callback.message.video:
            await callback.message.delete()
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=markup,
                parse_mode="Markdown"
            )
        else:
            # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º
            await callback.message.edit_text(
                text,
                reply_markup=markup,
                parse_mode="Markdown"
            )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=markup,
            parse_mode="Markdown"
        )
    
    await callback.answer()


@router.callback_query(F.data.startswith("course_register_"))
async def show_tariff_selection(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å"""
    course_slug = callback.data.replace("course_register_", "")
    
    # –°–æ–∑–¥–∞–µ–º mock callback —Å –Ω—É–∂–Ω—ã–º data
    class CallbackDataWrapper:
        def __init__(self, original_callback, new_data):
            self._original = original_callback
            self.data = new_data
            
        def __getattr__(self, name):
            return getattr(self._original, name)
    
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    wrapped_callback = CallbackDataWrapper(callback, f"course_price_{course_slug}")
    await show_course_price(wrapped_callback)


@router.callback_query(F.data.startswith("course_price_"))
async def show_course_price(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞—Ä–∏—Ñ—ã –∫—É—Ä—Å–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞"""
    course_slug = callback.data.replace("course_price_", "")
    
    # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å –∏–∑ JSON
    course = get_course_by_slug(course_slug)
    
    if not course:
        await callback.answer("–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return
    
    tariffs = course.get('tariffs', [])
    active_tariffs = [t for t in tariffs if t.get('is_active', True)]
    
    if not active_tariffs:
        await callback.answer("–¢–∞—Ä–∏—Ñ—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", show_alert=True)
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ç–∞—Ä–∏—Ñ–æ–≤
    emoji = course.get('emoji', 'üìö')
    text = f"üí∞ **–°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞ ¬´{course['name']}¬ª**\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º —Ç–∞—Ä–∏—Ñ–µ
    for tariff in active_tariffs:
        support_text = "‚úÖ –° —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ–º" if tariff.get('with_support') else "üìö –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ"
        text += f"**{tariff['name']}** ‚Äî {tariff['price']} ‚ÇΩ\n"
        text += f"{support_text}\n"
        if tariff.get('description'):
            text += f"{tariff['description']}\n"
        
        text += "\n–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç:\n"
        if tariff.get('features'):
            for feature in tariff['features']:
                text += f"‚úîÔ∏è {feature}\n"
        
        text += "\n"
    
    text += "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç –æ–±—É—á–µ–Ω–∏—è:"
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏
    buttons = []
    for tariff in active_tariffs:
        support_emoji = "üë®‚Äçüè´" if tariff.get('with_support') else "üìö"
        buttons.append([InlineKeyboardButton(
            text=f"{support_emoji} {tariff['name']} ‚Äî {tariff['price']} ‚ÇΩ",
            callback_data=f"tariff_{course_slug}_{tariff['id']}"
        )])
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    buttons.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_navigation")])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    
    try:
        await callback.message.edit_text(
            text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
    
    await callback.answer()


@router.callback_query(F.data.startswith("course_"))
async def show_course_detail(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–µ - –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏"""
    # –ò–∑–≤–ª–µ–∫–∞–µ–º slug –∫—É—Ä—Å–∞
    parts = callback.data.split("_")
    
    if len(parts) < 2:
        await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫—É—Ä—Å–∞", show_alert=True)
        return
    
    course_slug = "_".join(parts[1:])
    
    # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å –∏–∑ JSON
    course = get_course_by_slug(course_slug)
    
    if not course:
        await callback.answer("–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–µ
    emoji = course.get('emoji', 'üìö')
    text = f"{emoji} **{course['name']}**\n\n"
    text += f"{course.get('description', '')}\n\n"
    
    if course.get('duration'):
        text += f"‚è± **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {course['duration']}\n\n"
    
    if course.get('program'):
        text += "üìã **–ü—Ä–æ–≥—Ä–∞–º–º–∞:**\n"
        for module in course['program']:
            text += f"‚Ä¢ {module}\n"
    
    try:
        await callback.message.edit_text(
            text,
            reply_markup=get_course_detail_keyboard(course_slug),
            parse_mode="Markdown"
        )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, —ç—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç, –≤–∏–¥–µ–æ –∏–ª–∏ —Ñ–æ—Ç–æ)
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=get_course_detail_keyboard(course_slug),
            parse_mode="Markdown"
        )
    
    await callback.answer()


@router.callback_query(F.data == "free_natal_chart")
async def show_free_natal_chart_block(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–ª–æ–∫ '–ö–∞–∫ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ—é –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É' - –£—Ä–æ–∫ 1"""
    db = await get_db()
    user_repo = UserRepository(db)
    await user_repo.update_activity(callback.from_user.id)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ –ë–î
    from utils.bot_settings import get_setting
    custom_text = await get_setting("free_course_step1_text")
    
    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
    if not custom_text:
        text = """üîÆ –ü–æ—Å—Ç—Ä–æ–π—Ç–µ —Å–≤–æ—é –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É!

–ù–∏–∂–µ —è –ø—Ä–µ–¥–ª–æ–∂—É –≤–∞–º –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞, –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π üí´

–≠—Ç–æ –±–∞–∑–æ–≤—ã–π –∏ –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã–π —à–∞–≥, —á—Ç–æ–±—ã –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ.
–ë–µ–∑ –Ω–µ–≥–æ –º—ã, –∫–∞–∫ –≤—Å–µ–ª–µ–Ω—Å–∫–∏–µ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä—ã –±–µ–∑ –∫–∞—Ä—Ç—ã üòÑ

–í–∞—à–∞ –Ω–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ –ø–æ–∫–∞–∂–µ—Ç, –∫–∞–∫–∏–µ ¬´–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏¬ª –∂–∏–≤—É—Ç –≤–Ω—É—Ç—Ä–∏ –≤–∞—Å ‚Äî –≥–¥–µ –∫—Ç–æ –≥–ª–∞–≤–Ω—ã–π, –∫—Ç–æ –ª—é–±–∏—Ç –∫–æ–º–∞–Ω–¥–æ–≤–∞—Ç—å, –∞ –∫—Ç–æ —à–µ–ø—á–µ—Ç –∏–∑ —Ç–µ–Ω–∏.
–í—ã —É–∑–Ω–∞–µ—Ç–µ, –∫–∞–∫–∏–µ –∑–Ω–∞–∫–∏ —É–ø—Ä–∞–≤–ª—è—é—Ç –≤–∞—à–∏–º–∏ –∫–ª—é—á–µ–≤—ã–º–∏ —Å—Ñ–µ—Ä–∞–º–∏ –æ—Ç –ê—Å—Ü–µ–Ω–¥–µ–Ω—Ç–∞ (—Ç–æ–≥–æ, –∫–∞–∫ –≤—ã —Å–µ–±—è –ø—Ä–æ—è–≤–ª—è–µ—Ç–µ) –¥–æ –¥—Ä—É–≥–∏—Ö –≤–∞–∂–Ω—ã—Ö —Ç–æ—á–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —Å—Ç–∏–ª—å –∂–∏–∑–Ω–∏, –º—ã—à–ª–µ–Ω–∏—è –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–π."""
    else:
        text = custom_text
    
    # –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–î–∞–ª–µ–µ ‚ñ∂Ô∏è", callback_data="free_natal_chart_step_2")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_navigation")]
    ])
    
    try:
        await callback.message.edit_text(
            text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
    except Exception:
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
    
    await callback.answer()


@router.callback_query(F.data == "free_natal_chart_step_2")
async def show_free_natal_chart_step_2(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–ª–æ–∫ - –£—Ä–æ–∫ 2"""
    db = await get_db()
    user_repo = UserRepository(db)
    await user_repo.update_activity(callback.from_user.id)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ –ë–î
    from utils.bot_settings import get_setting
    custom_text = await get_setting("free_course_step2_text")
    
    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
    if not custom_text:
        text = """üíª –ï—Å–ª–∏ —É –≤–∞—Å Windows ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É ZET 9 (Z9).
–í–æ—Ç —Å—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è https://astrozet.net/

üì± –ï—Å–ª–∏ –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä ‚Äî –º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –æ–Ω–ª–∞–π–Ω-–ø—Ä–æ–≥—Ä–∞–º–º–æ–π –°–æ—Ç–∏—Å (Sotis-online).
–û–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ª—é–±–æ–º –±—Ä–∞—É–∑–µ—Ä–µ, –¥–∞–∂–µ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ https://sotis-online.ru/?chr=ct:1;dt:20250511163725;cid:2417766;name:New%20chart"""
    else:
        text = custom_text
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="free_natal_chart"),
         InlineKeyboardButton(text="–î–∞–ª–µ–µ ‚ñ∂Ô∏è", callback_data="free_natal_chart_step_3")]
    ])
    
    try:
        await callback.message.edit_text(
            text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
    except Exception:
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
    
    await callback.answer()


@router.callback_query(F.data == "free_natal_chart_step_3")
async def show_free_natal_chart_step_3(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–ª–æ–∫ - –£—Ä–æ–∫ 3: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ Sotis Online"""
    db = await get_db()
    user_repo = UserRepository(db)
    await user_repo.update_activity(callback.from_user.id)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ –ë–î
    from utils.bot_settings import get_setting
    custom_text = await get_setting("free_course_step3_text")
    
    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
    if not custom_text:
        text = """üîÆ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –∫–∞–∫ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ—é –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É –≤ Sotis Online

1Ô∏è‚É£ –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç
–ü–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç ‚Üí https://sotis-online.ru

2Ô∏è‚É£ –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é
–í –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –Ω–∞–∂–º–∏ –Ω–∞ —Ç—Ä–∏ –ø–æ–ª–æ—Å–∫–∏ (Menu) ‚Üí –ø–æ—è–≤–∏—Ç—Å—è –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é.

3Ô∏è‚É£ –í—ã–±—Ä–∞—Ç—å ¬´–ì–æ—Ä–æ—Å–∫–æ–ø¬ª ‚Üí ¬´–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π¬ª
–ù–∞ —Å–∫—Ä–∏–Ω–µ –≤–∏–¥–Ω–æ –∑–µ–ª—ë–Ω–æ–µ –º–µ–Ω—é ‚Äî –≤—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç:
üü¢ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π

4Ô∏è‚É£ –í—ã–±–µ—Ä–∏ —Ç–∏–ø –∫–∞—Ä—Ç—ã
–ü–æ—è–≤–∏—Ç—Å—è –æ–∫–Ω–æ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏.
–í—ã–±–∏—Ä–∞–µ–º: –û–¥–∏–Ω–∞—Ä–Ω–∞—è –∫–∞—Ä—Ç–∞
(—Ç–∞–∫ —Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞, —Ç—Ä–∞–Ω–∑–∏—Ç, –¥–∏—Ä–µ–∫—Ü–∏–∏, –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏ –∏ —Ç.–¥.)

5Ô∏è‚É£ –í–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ —Ä–æ–∂–¥–µ–Ω–∏—è
–û—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–Ω–æ —Å –Ω–∞–¥–ø–∏—Å—å—é ¬´–ò–∑–º–µ–Ω–∏—Ç—å¬ª.

–ó–∞–ø–æ–ª–Ω–∏ –ø–æ–ª—è:
‚Ä¢ –¢–∏–ø –∫–∞—Ä—Ç—ã: ¬´–ù–∞—Ç–∞–ª¬ª
‚Ä¢ –ò–º—è: –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ—ë –∏–º—è –∏–ª–∏ –ª—é–±—É—é –ø–æ–¥–ø–∏—Å—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ú–æ—è –∫–∞—Ä—Ç–∞)
‚Ä¢ –î–∞—Ç–∞ / –í—Ä–µ–º—è: üëâ –≤–≤–µ–¥–∏ —Å–≤–æ—é –¥–∞—Ç—É –∏ —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è
  (–ï—Å–ª–∏ –≤—Ä–µ–º—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≥–∞–ª–æ—á–∫—É Auto)
‚Ä¢ –ú–µ—Å—Ç–æ: –ù–∞–ø–∏—à–∏ –≥–æ—Ä–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞, RU

6Ô∏è‚É£ –ù–∞–∂–º–∏ –û–ö ‚úÖ
–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ—Å—Ç—Ä–æ–∏—Ç –∫—Ä—É–≥–æ–≤—É—é –¥–∏–∞–≥—Ä–∞–º–º—É ‚Äî —ç—Ç–æ –∏ –µ—Å—Ç—å —Ç–≤–æ—è –Ω–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞.

7Ô∏è‚É£ (–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ) –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ä—Ç—É
–ß—Ç–æ–±—ã –Ω–µ –≤–≤–æ–¥–∏—Ç—å –∑–∞–Ω–æ–≤–æ:
–û—Ç–∫—Ä–æ–π –º–µ–Ω—é ‚Üí –ì–æ—Ä–æ—Å–∫–æ–ø ‚Üí –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –±–∞–∑—É."""
    else:
        text = custom_text
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="free_natal_chart_step_2"),
         InlineKeyboardButton(text="–î–∞–ª–µ–µ ‚ñ∂Ô∏è", callback_data="free_natal_chart_step_4")]
    ])
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –º–µ–¥–∏–∞ –∏–∑ –ë–î
        from utils.bot_settings import get_setting
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ç–æ
        photos_json = await get_setting("free_course_step3_photos")
        video_file_id = await get_setting("free_course_step3_video")
        
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –≤–∏–¥–µ–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
        if video_file_id:
            await callback.bot.send_video(
                chat_id=callback.message.chat.id,
                video=video_file_id,
                caption=text,
                reply_markup=keyboard
            )
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö
        elif photos_json:
            import json
            try:
                photos = json.loads(photos_json)
                if photos and len(photos) > 0:
                    # –ï—Å–ª–∏ –æ–¥–Ω–æ —Ñ–æ—Ç–æ
                    if len(photos) == 1:
                        await callback.bot.send_photo(
                            chat_id=callback.message.chat.id,
                            photo=photos[0],
                            caption=text,
                            reply_markup=keyboard
                        )
                    # –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø–æ–π
                    else:
                        from aiogram.types import InputMediaPhoto
                        media_group = []
                        for i, photo_id in enumerate(photos[:10]):  # –ú–∞–∫—Å–∏–º—É–º 10 —Ñ–æ—Ç–æ
                            if i == 0:
                                media_group.append(InputMediaPhoto(media=photo_id, caption=text))
                            else:
                                media_group.append(InputMediaPhoto(media=photo_id))
                        
                        await callback.bot.send_media_group(
                            chat_id=callback.message.chat.id,
                            media=media_group
                        )
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
                        await callback.bot.send_message(
                            chat_id=callback.message.chat.id,
                            text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                            reply_markup=keyboard
                        )
                else:
                    # –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π - –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
                    await callback.bot.send_message(
                        chat_id=callback.message.chat.id,
                        text=text,
                        reply_markup=keyboard,
                        disable_web_page_preview=True
                    )
            except:
                # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ - –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
                await callback.bot.send_message(
                    chat_id=callback.message.chat.id,
                    text=text,
                    reply_markup=keyboard,
                    disable_web_page_preview=True
                )
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç –º–µ–¥–∏–∞ - –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=keyboard,
                disable_web_page_preview=True
            )
    except Exception as e:
        # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
    
    await callback.answer()


@router.callback_query(F.data == "free_natal_chart_step_4")
async def show_free_natal_chart_step_4(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–ª–æ–∫ - –®–∞–≥ 4: –¢–µ–∫—Å—Ç + –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ"""
    db = await get_db()
    user_repo = UserRepository(db)
    await user_repo.update_activity(callback.from_user.id)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ –ë–î
    from utils.bot_settings import get_setting
    custom_text = await get_setting("free_course_step4_text")
    
    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
    if not custom_text:
        text = """üìö <b>–®–∞–≥ 4: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</b>

–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç–æ–π.

–ü–æ—Å–ª–µ –∏–∑—É—á–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É."""
    else:
        text = custom_text
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="free_natal_chart_step_3"),
         InlineKeyboardButton(text="–î–∞–ª–µ–µ ‚ñ∂Ô∏è", callback_data="free_natal_chart_step_5")]
    ])
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ç–æ
        photos_json = await get_setting("free_course_step4_photos")
        
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        if photos_json:
            import json
            try:
                photos = json.loads(photos_json)
                if photos and len(photos) > 0:
                    # –ï—Å–ª–∏ –æ–¥–Ω–æ —Ñ–æ—Ç–æ
                    if len(photos) == 1:
                        await callback.bot.send_photo(
                            chat_id=callback.message.chat.id,
                            photo=photos[0],
                            caption=text,
                            reply_markup=keyboard
                        )
                    # –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø–æ–π
                    else:
                        from aiogram.types import InputMediaPhoto
                        media_group = []
                        for i, photo_id in enumerate(photos[:10]):  # –ú–∞–∫—Å–∏–º—É–º 10 —Ñ–æ—Ç–æ
                            if i == 0:
                                media_group.append(InputMediaPhoto(media=photo_id, caption=text))
                            else:
                                media_group.append(InputMediaPhoto(media=photo_id))
                        
                        await callback.bot.send_media_group(
                            chat_id=callback.message.chat.id,
                            media=media_group
                        )
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
                        await callback.bot.send_message(
                            chat_id=callback.message.chat.id,
                            text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                            reply_markup=keyboard
                        )
                else:
                    # –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π - –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
                    await callback.bot.send_message(
                        chat_id=callback.message.chat.id,
                        text=text,
                        reply_markup=keyboard
                    )
            except:
                # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ - –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
                await callback.bot.send_message(
                    chat_id=callback.message.chat.id,
                    text=text,
                    reply_markup=keyboard
                )
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç —Ñ–æ—Ç–æ - –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=keyboard
            )
    except Exception as e:
        # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=keyboard
        )
    
    await callback.answer()


@router.callback_query(F.data == "free_natal_chart_step_5")
async def show_free_natal_chart_step_5(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–ª–æ–∫ - –®–∞–≥ 5: –¢–µ–∫—Å—Ç + –æ–¥–Ω–æ —Ñ–æ—Ç–æ"""
    db = await get_db()
    user_repo = UserRepository(db)
    await user_repo.update_activity(callback.from_user.id)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ –ë–î
    from utils.bot_settings import get_setting
    custom_text = await get_setting("free_course_step5_text")
    
    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
    if not custom_text:
        text = """üéØ <b>–®–∞–≥ 5: –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ —Å–∏–º–≤–æ–ª–∞–º</b>

–í–∞–∂–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è –≤ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç–µ.

–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ª—É—á—à–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã."""
    else:
        text = custom_text
    
    # –ö–Ω–æ–ø–∫–∞ "–ü–æ–ª—É—á–∏–ª–æ—Å—å" –∏ –Ω–∞–∑–∞–¥
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü–æ–ª—É—á–∏–ª–æ—Å—å", callback_data="natal_chart_done")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="free_natal_chart_step_4")]
    ])
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ç–æ
        photo_file_id = await get_setting("free_course_step5_photo")
        
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        if photo_file_id:
            # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ —Å —Ç–µ–∫—Å—Ç–æ–º
            await callback.bot.send_photo(
                chat_id=callback.message.chat.id,
                photo=photo_file_id,
                caption=text,
                reply_markup=keyboard
            )
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç —Ñ–æ—Ç–æ - –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=keyboard
            )
    except Exception as e:
        # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=keyboard
        )
    
    await callback.answer()


@router.callback_query(F.data == "natal_chart_done")
async def natal_chart_done(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–ª—É—á–∏–ª–æ—Å—å' - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç—Ä–∏ –ø—É—Ç–∏"""
    db = await get_db()
    user_repo = UserRepository(db)
    await user_repo.update_activity(callback.from_user.id)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –ë–î
    from utils.bot_settings import get_setting
    
    custom_text = await get_setting("free_course_final_message")
    
    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
    if not custom_text:
        text = """‚ú® –¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ –≤—ã –∑–Ω–∞–µ—Ç–µ —Å–≤–æ—é –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ!

–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é —Ç—Ä–∏ –ø—É—Ç–∏ (–≤—ã–±–∏—Ä–∞–π—Ç–µ –ø–æ —É—Ä–æ–≤–Ω—é —Å–º–µ–ª–æ—Å—Ç–∏ üòÑ):

üíû –ï—Å–ª–∏ –≤—ã —É–∂–µ –Ω–µ–º–Ω–æ–≥–æ –∑–Ω–∞–∫–æ–º—ã —Å –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–µ–π –∏ —Ö–æ—Ç–∏—Ç–µ –≥–ª—É–±–∂–µ –ø–æ–Ω—è—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–π ‚Äî –≤–∞—Å –∂–¥—ë—Ç –∫—É—Ä—Å LoveCode. –û–Ω –æ —Ç–æ–º, –ø–æ—á–µ–º—É –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –∏–º–µ–Ω–Ω–æ —Ç–∞–∫ –∏ –∫–∞–∫ –∏—Ö –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å —á–µ—Ä–µ–∑ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–≤–æ–µ–π –∫–∞—Ä—Ç—ã.

üå± –ï—Å–ª–∏ –≤—ã —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å —Å–æ–±–æ–π —á–µ—Ä–µ–∑ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—é ‚Äî –Ω–∞—á–Ω–∏—Ç–µ —Å –º–∏–Ω–∏-–∫—É—Ä—Å–∞ ¬´7 –¥–Ω–µ–π —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è¬ª. –û–Ω –ª—ë–≥–∫–∏–π, —Å —é–º–æ—Ä–æ–º –∏ –¥–∞—ë—Ç –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –º–∞–≥–∏—é –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–∏ –±–µ–∑ –ø–µ—Ä–µ–≥—Ä—É–∑–∞ —Ç–µ—Ä–º–∏–Ω–∞–º–∏.

üöÄ –ê –µ—Å–ª–∏ –≤—ã —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏ —á—É–≤—Å—Ç–≤—É–µ—Ç–µ, —á—Ç–æ –≥–æ—Ç–æ–≤—ã —Å—Ä–∞–∑—É –Ω—ã—Ä–Ω—É—Ç—å –≤ –≥–ª—É–±–∏–Ω—É, ‚Äî –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ ¬´–û—Å–Ω–æ–≤—ã –∞—Å—Ç—Ä–æ–ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏¬ª.
–≠—Ç–æ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ, –≥–¥–µ –≤—ã –Ω–∞—É—á–∏—Ç–µ—Å—å —á–∏—Ç–∞—Ç—å –∫–∞—Ä—Ç—ã –∫–∞–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª –∏ –ø–æ–Ω–∏–º–∞—Ç—å —Å–µ–±—è –±–µ–∑ –º–∏—Å—Ç–∏–∫–∏, –Ω–æ —Å –¥—É—à–æ–π."""
    else:
        text = custom_text
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—É—Ç–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üíû LoveCode", callback_data="course_love-code")],
        [InlineKeyboardButton(text="üå± –ú–∏–Ω–∏-–∫—É—Ä—Å (7 –¥–Ω–µ–π)", callback_data="mini_course")],
        [InlineKeyboardButton(text="üöÄ –û—Å–Ω–æ–≤—ã –∞—Å—Ç—Ä–æ–ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏", callback_data="course_astro-basics")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_navigation"), 
         InlineKeyboardButton(text="üè† –í –º–µ–Ω—é", callback_data="main_menu")]
    ])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ç–æ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    photo_file_id = await get_setting("free_course_final_photo")
    
    try:
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        if photo_file_id:
            # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ —Å —Ç–µ–∫—Å—Ç–æ–º
            await callback.bot.send_photo(
                chat_id=callback.message.chat.id,
                photo=photo_file_id,
                caption=text,
                reply_markup=keyboard
            )
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç —Ñ–æ—Ç–æ - –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=keyboard
            )
    except Exception:
        # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=keyboard
        )
    
    await callback.answer()
