from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.exceptions import TelegramBadRequest

from database import get_db, UserRepository
from data import get_active_courses, get_course_by_slug, get_tariff_by_id
from keyboards import (
    get_courses_keyboard,
    get_course_detail_keyboard,
    get_tariff_keyboard,
    get_back_keyboard
)

router = Router()


@router.callback_query(F.data == "courses")
async def show_courses_catalog(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –∫—É—Ä—Å–æ–≤"""
    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db = await get_db()
    user_repo = UserRepository(db)
    await user_repo.update_activity(callback.from_user.id)
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—Å—ã –∏–∑ JSON
    courses = get_active_courses()
    
    if not courses:
        text = "üìö –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤."
        markup = get_back_keyboard("main_menu")
    else:
        text = "üìö **–ö–∞—Ç–∞–ª–æ–≥ –∫—É—Ä—Å–æ–≤**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∫—É—Ä—Å:"
        markup = get_courses_keyboard(courses)
    
    try:
        await callback.message.edit_text(
            text,
            reply_markup=markup,
            parse_mode="Markdown"
        )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        if callback.message.video:
            # –ï—Å–ª–∏ –≤–∏–¥–µ–æ - –ù–ï —É–¥–∞–ª—è–µ–º
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=markup,
                parse_mode="Markdown"
            )
        else:
            # –ï—Å–ª–∏ —Ñ–æ—Ç–æ - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            try:
                await callback.message.delete()
            except Exception:
                pass
            
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=markup,
                parse_mode="Markdown"
            )
    
    await callback.answer()


@router.callback_query(F.data.startswith("course_register_"))
async def show_tariff_selection(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏"""
    course_slug = callback.data.replace("course_register_", "")
    
    # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å –∏–∑ JSON
    course = get_course_by_slug(course_slug)
    
    if not course:
        await callback.answer("–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return
    
    tariffs = course.get('tariffs', [])
    active_tariffs = [t for t in tariffs if t.get('is_active', True)]
    
    if not active_tariffs:
        await callback.answer("–¢–∞—Ä–∏—Ñ—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", show_alert=True)
        return
    
    text = f"üìù **–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ**\n\n"
    text += f"–ö—É—Ä—Å: {course['name']}\n\n"
    text += "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç –æ–±—É—á–µ–Ω–∏—è:"
    
    await callback.message.edit_text(
        text,
        reply_markup=get_tariff_keyboard(course_slug, active_tariffs),
        parse_mode="Markdown"
    )
    await callback.answer()


@router.callback_query(F.data.startswith("course_"))
async def show_course_detail(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–µ"""
    # –ò–∑–≤–ª–µ–∫–∞–µ–º slug –∫—É—Ä—Å–∞
    parts = callback.data.split("_")
    
    if len(parts) < 2:
        await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫—É—Ä—Å–∞", show_alert=True)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –∫—É—Ä—Å–∞
    if parts[1] == "about":
        course_slug = "_".join(parts[2:])
        show_about = True
    elif parts[1] == "price":
        course_slug = "_".join(parts[2:])
        show_about = False
    else:
        course_slug = "_".join(parts[1:])
        show_about = True
    
    # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å –∏–∑ JSON
    course = get_course_by_slug(course_slug)
    
    if not course:
        await callback.answer("–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return
    
    if show_about:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–µ
        emoji = course.get('emoji', 'üìö')
        text = f"{emoji} **{course['name']}**\n\n"
        text += f"{course.get('description', '')}\n\n"
        
        if course.get('duration'):
            text += f"‚è± **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {course['duration']}\n\n"
        
        if course.get('program'):
            text += "üìã **–ü—Ä–æ–≥—Ä–∞–º–º–∞:**\n"
            for module in course['program']:
                text += f"‚Ä¢ {module}\n"
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞—Ä–∏—Ñ—ã
        emoji = course.get('emoji', 'üìö')
        text = f"üí∞ **–¢–∞—Ä–∏—Ñ—ã –∫—É—Ä—Å–∞ ¬´{course['name']}¬ª**\n\n"
        
        tariffs = course.get('tariffs', [])
        active_tariffs = [t for t in tariffs if t.get('is_active', True)]
        
        for tariff in active_tariffs:
            support_text = "‚úÖ –° —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ–º" if tariff.get('with_support') else "üìö –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ"
            text += f"**{tariff['name']}** - {tariff['price']} ‚ÇΩ\n"
            text += f"{support_text}\n"
            text += f"{tariff.get('description', '')}\n"
            
            if tariff.get('features'):
                for feature in tariff['features']:
                    text += f"  ‚Ä¢ {feature}\n"
            
            text += "\n"
    
    try:
        await callback.message.edit_text(
            text,
            reply_markup=get_course_detail_keyboard(course_slug),
            parse_mode="Markdown"
        )
    except TelegramBadRequest:
        # –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
        pass
    
    await callback.answer()
