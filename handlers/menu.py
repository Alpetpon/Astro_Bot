from datetime import datetime
from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy.orm import Session

from config import config
from database import get_db, User
from data import get_active_guides, get_guide_by_id
from keyboards import get_main_menu_keyboard, get_back_keyboard, get_guides_list_keyboard, get_guide_keyboard, get_about_me_keyboard
from utils.bot_settings import get_setting, ABOUT_ME_VIDEO_KEY

router = Router()


@router.callback_query(F.data == "main_menu")
async def show_main_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    db: Session = get_db()
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = db.query(User).filter(User.telegram_id == callback.from_user.id).first()
        if user:
            user.last_activity = datetime.utcnow()
            db.commit()
        
        try:
            await callback.message.edit_text(
                "üè† **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:",
                reply_markup=get_main_menu_keyboard(),
                parse_mode="Markdown"
            )
        except Exception:
            # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –≤–∏–¥–µ–æ (–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ) –∏–ª–∏ —Ñ–æ—Ç–æ (–æ—Ç–∑—ã–≤—ã)
            if callback.message.video:
                # –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ - –ù–ï —É–¥–∞–ª—è–µ–º, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
                await callback.bot.send_message(
                    chat_id=callback.message.chat.id,
                    text="üè† **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:",
                    reply_markup=get_main_menu_keyboard(),
                    parse_mode="Markdown"
                )
            else:
                # –ï—Å–ª–∏ —ç—Ç–æ —Ñ–æ—Ç–æ –∏–ª–∏ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                try:
                    await callback.message.delete()
                except Exception:
                    pass
                
                await callback.bot.send_message(
                    chat_id=callback.message.chat.id,
                    text="üè† **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:",
                    reply_markup=get_main_menu_keyboard(),
                    parse_mode="Markdown"
                )
        await callback.answer()
    
    finally:
        db.close()


@router.callback_query(F.data == "about_me")
async def show_about_me(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ —Å –≤–∏–¥–µ–æ-–∏–Ω—Ç–µ—Ä–≤—å—é –∏ –∫–Ω–æ–ø–∫–∞–º–∏ —Å–æ—Ü. —Å–µ—Ç–µ–π"""
    
    # –ü–æ–ª—É—á–∞–µ–º file_id –≤–∏–¥–µ–æ (—Å–Ω–∞—á–∞–ª–∞ –∏–∑ –ë–î, –ø–æ—Ç–æ–º –∏–∑ config)
    about_me_video_id = get_setting(ABOUT_ME_VIDEO_KEY) or config.ABOUT_ME_VIDEO_FILE_ID
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ-–∏–Ω—Ç–µ—Ä–≤—å—é, –µ—Å–ª–∏ –æ–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
    if about_me_video_id:
        try:
            # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await callback.message.delete()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
            text = config.ABOUT_ME_TEXT + "\n\nüì± **–ú–æ–∏ —Å–æ—Ü. —Å–µ—Ç–∏:**"
            await callback.message.answer_video(
                video=about_me_video_id,
                caption=text,
                reply_markup=get_about_me_keyboard(),
                parse_mode="Markdown"
            )
        except Exception as e:
            # –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç
            text = config.ABOUT_ME_TEXT + "\n\nüì± **–ú–æ–∏ —Å–æ—Ü. —Å–µ—Ç–∏:**"
            await callback.message.edit_text(
                text,
                reply_markup=get_about_me_keyboard(),
                parse_mode="Markdown"
            )
    else:
        # –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç
        text = config.ABOUT_ME_TEXT + "\n\nüì± **–ú–æ–∏ —Å–æ—Ü. —Å–µ—Ç–∏:**"
        await callback.message.edit_text(
            text,
            reply_markup=get_about_me_keyboard(),
            parse_mode="Markdown"
        )
    
    await callback.answer()


@router.callback_query(F.data == "about_me_2")
async def show_about_me_2(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Å–æ—Ü. —Å–µ—Ç–∏"""
    text = config.ABOUT_ME_TEXT + f"\n\nüì± **–ú–æ–∏ —Å–æ—Ü. —Å–µ—Ç–∏:**\n\n"
    text += f"üì± [Instagram]({config.INSTAGRAM_URL})\n"
    text += f"üé• [YouTube]({config.YOUTUBE_URL})\n"
    text += f"üíô [–í–ö–æ–Ω—Ç–∞–∫—Ç–µ]({config.VK_URL})\n"
    text += f"‚úàÔ∏è [Telegram –∫–∞–Ω–∞–ª]({config.TELEGRAM_CHANNEL_URL})\n"
    text += f"üì∞ [–î–∑–µ–Ω]({config.DZEN_URL})"
    
    await callback.message.edit_text(
        text,
        reply_markup=get_back_keyboard("main_menu", "‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"),
        parse_mode="Markdown",
        disable_web_page_preview=True
    )
    await callback.answer()


@router.callback_query(F.data == "guides_list")
async def show_guides_list(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥–∞–π–¥–æ–≤"""
    text = "üíï **–ì–∞–π–¥—ã**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≥–∞–π–¥:"
    
    try:
        await callback.message.edit_text(
            text,
            reply_markup=get_guides_list_keyboard(),
            parse_mode="Markdown"
        )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –≤–∏–¥–µ–æ –∏–ª–∏ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if callback.message.video:
            # –ï—Å–ª–∏ –≤–∏–¥–µ–æ - –ù–ï —É–¥–∞–ª—è–µ–º, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=get_guides_list_keyboard(),
                parse_mode="Markdown"
            )
        else:
            # –ï—Å–ª–∏ —ç—Ç–æ —Ñ–æ—Ç–æ –∏–ª–∏ –¥—Ä—É–≥–æ–µ - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            try:
                await callback.message.delete()
            except Exception:
                pass
            
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=get_guides_list_keyboard(),
                parse_mode="Markdown"
            )
    await callback.answer()


@router.callback_query(F.data.startswith("guide_"))
async def show_guide(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –≥–∞–π–¥–µ"""
    guide_id = callback.data.replace("guide_", "")
    
    # –ù–∞—Ö–æ–¥–∏–º –≥–∞–π–¥ –≤ JSON
    guide = get_guide_by_id(guide_id)
    
    if not guide or not guide.get('is_active', True):
        await callback.answer("–ì–∞–π–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return
    
    # –ì–∞–π–¥—ã –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞
    has_file = bool(guide.get('file_id'))
    related_course_slug = guide.get('related_course_slug')
    
    await callback.message.edit_text(
        guide.get('description') or guide['name'],
        reply_markup=get_guide_keyboard(guide_id, has_file, related_course_slug),
        parse_mode="Markdown"
    )
    await callback.answer()


@router.callback_query(F.data.startswith("download_guide_"))
async def download_guide(callback: CallbackQuery):
    """–°–∫–∞—á–∞—Ç—å –≥–∞–π–¥ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)"""
    guide_id = callback.data.replace("download_guide_", "")
    
    # –ù–∞—Ö–æ–¥–∏–º –≥–∞–π–¥ –≤ JSON
    guide = get_guide_by_id(guide_id)
    
    if not guide or not guide.get('is_active', True):
        await callback.answer("–ì–∞–π–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return
    
    file_id = guide.get('file_id')
    
    if not file_id:
        await callback.answer("–§–∞–π–ª –≥–∞–π–¥–∞ –ø–æ–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –°–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è!", show_alert=True)
        return
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        await callback.message.answer_document(
            document=file_id,
            caption=f"üì• {guide.get('emoji') or 'üíù'} {guide['name']}\n\nüéÅ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è!"
        )
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        buttons = []
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–π –∫—É—Ä—Å, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ—Ö–æ–¥–∞
        if guide.get('related_course_slug'):
            buttons.append([InlineKeyboardButton(
                text="üìö –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫—É—Ä—Å—É",
                callback_data=f"course_{guide['related_course_slug']}"
            )])
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        buttons.append([
            InlineKeyboardButton(text="‚óÄÔ∏è –ö –≥–∞–π–¥–∞–º", callback_data="guides_list"),
            InlineKeyboardButton(text="üè† –í –º–µ–Ω—é", callback_data="main_menu")
        ])
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        await callback.message.answer(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=keyboard
        )
        
        await callback.answer("–ì–∞–π–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    
    except Exception as e:
        await callback.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {str(e)}", show_alert=True)
