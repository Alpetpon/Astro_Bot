from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

from config import config
from database import get_db, UserRepository
from data import get_active_guides, get_guide_by_id, get_mini_course, get_mini_course_tariff, get_course_by_slug
from keyboards import get_main_menu_keyboard, get_back_keyboard, get_guides_list_keyboard, get_guide_keyboard, get_about_me_keyboard, get_mini_course_keyboard, get_mini_course_tariff_keyboard

router = Router()


@router.callback_query(F.data == "back_navigation")
async def navigate_back(callback: CallbackQuery, state: FSMContext):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥' —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
    # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–ª–µ–≤–æ–π callback –∏–∑ FSM
    data = await state.get_data()
    target_callback = data.get('back_target', 'main_menu')
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π mock –æ–±—ä–µ–∫—Ç —Å –Ω—É–∂–Ω—ã–º callback_data
    # –í–º–µ—Å—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è frozen –æ–±—ä–µ–∫—Ç–∞, —Å–æ–∑–¥–∞–µ–º wrapper
    class CallbackDataWrapper:
        def __init__(self, original_callback, new_data):
            self._original = original_callback
            self.data = new_data
            
        def __getattr__(self, name):
            return getattr(self._original, name)
    
    # –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º callback —Å –Ω–æ–≤—ã–º data
    wrapped_callback = CallbackDataWrapper(callback, target_callback)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π handler –≤—ã–∑–≤–∞—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ callback_data
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º handlers –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    from . import courses, consultations, reviews, cabinet
    
    # –ú–∞–ø–ø–∏–Ω–≥ callback_data –Ω–∞ handlers
    handlers_map = {
        'main_menu': show_main_menu,
        'guides_list': show_guides_list,
        'about_me': show_about_me,
        'mini_course': show_mini_course,
        'mini_course_price': show_mini_course_price,
        'webinar': show_webinar,
        'courses': courses.show_courses_catalog,
        'consultations': consultations.show_consultations_catalog,
        'reviews': reviews.show_reviews_page,
        'my_cabinet': cabinet.show_my_cabinet,
        'my_courses': cabinet.show_my_courses,
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
    try:
        from . import subscription_handlers
        handlers_map['subscription_channel'] = subscription_handlers.show_subscription_channel
        handlers_map['subscription_status'] = subscription_handlers.show_subscription_status
    except ImportError:
        pass
    
    # –ï—Å–ª–∏ —ç—Ç–æ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π callback (–Ω–∞–ø—Ä–∏–º–µ—Ä, course_xxx), –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ
    if target_callback.startswith('course_register_'):
        await courses.show_tariff_selection(wrapped_callback)
    elif target_callback.startswith('course_price_'):
        await courses.show_course_price(wrapped_callback)
    elif target_callback.startswith('course_'):
        await courses.show_course_detail(wrapped_callback)
    elif target_callback.startswith('guide_'):
        await show_guide(wrapped_callback)
    elif target_callback.startswith('consultation_'):
        # consultation_, consultation_info_, consultation_details_, consultation_price_ 
        # –≤—Å–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ–¥–Ω–∏–º handler
        await consultations.show_consultation_detail(wrapped_callback)
    elif target_callback.startswith('mini_course_'):
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª—ã –º–∏–Ω–∏-–∫—É—Ä—Å–∞
        if target_callback == 'mini_course_about':
            await show_mini_course_about(wrapped_callback)
        elif target_callback == 'mini_course_program':
            await show_mini_course_program(wrapped_callback)
        elif target_callback == 'mini_course_price':
            await show_mini_course_price(wrapped_callback)
        elif target_callback == 'mini_course_register':
            await show_mini_course_tariff_selection(wrapped_callback)
        else:
            await show_mini_course(wrapped_callback)
    elif target_callback.startswith('my_course_'):
        await cabinet.show_my_course(wrapped_callback)
    elif target_callback.startswith('reviews_page_'):
        await reviews.show_reviews_page(wrapped_callback)
    elif target_callback in handlers_map:
        # –í—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π handler
        handler = handlers_map[target_callback]
        await handler(wrapped_callback)
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await show_main_menu(wrapped_callback)


@router.callback_query(F.data == "main_menu")
async def show_main_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    from utils.bot_settings import get_setting, WELCOME_VIDEO_KEY
    
    db = await get_db()
    user_repo = UserRepository(db)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await user_repo.update_activity(callback.from_user.id)
    
    # –ü–æ–ª—É—á–∞–µ–º file_id –≤–∏–¥–µ–æ
    welcome_video_id = await get_setting(WELCOME_VIDEO_KEY) or config.WELCOME_VIDEO_FILE_ID
    
    # –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ –≤–∏–¥–µ–æ —Å –º–µ–Ω—é - –ø—Ä–æ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º caption
    if callback.message.video and welcome_video_id:
        try:
            await callback.message.edit_caption(
                caption=config.MAIN_MENU_TEXT,
                reply_markup=get_main_menu_keyboard()
            )
            await callback.answer()
            return
        except Exception:
            pass
    
    # –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ - —É–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å –º–µ–Ω—é
    try:
        await callback.message.delete()
    except Exception:
        pass
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å –º–µ–Ω—é
    if welcome_video_id:
        try:
            await callback.bot.send_video(
                chat_id=callback.message.chat.id,
                video=welcome_video_id,
                caption=config.MAIN_MENU_TEXT,
                reply_markup=get_main_menu_keyboard()
            )
        except Exception:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=config.MAIN_MENU_TEXT,
                reply_markup=get_main_menu_keyboard()
            )
    else:
        # –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=config.MAIN_MENU_TEXT,
            reply_markup=get_main_menu_keyboard()
        )
    
    await callback.answer()


@router.callback_query(F.data == "about_me")
async def show_about_me(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Å–æ—Ü. —Å–µ—Ç–µ–π"""
    
    text = config.ABOUT_ME_TEXT + "\n\n–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –º–æ–∏ —Å–æ—Ü. —Å–µ—Ç–∏:"
    
    try:
        # –ü—Ä–æ–±—É–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        if callback.message.video:
            # –ï—Å–ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ —Å caption - –Ω–µ –º–æ–∂–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç–µ–∫—Å—Ç, —É–¥–∞–ª—è–µ–º
            await callback.message.delete()
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=get_about_me_keyboard(),
                parse_mode="Markdown",
                disable_web_page_preview=True
            )
        else:
            # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
            await callback.message.edit_text(
                text,
                reply_markup=get_about_me_keyboard(),
                parse_mode="Markdown",
                disable_web_page_preview=True
            )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=get_about_me_keyboard(),
            parse_mode="Markdown",
            disable_web_page_preview=True
        )
    
    await callback.answer()



@router.callback_query(F.data == "guides_list")
async def show_guides_list(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥–∞–π–¥–æ–≤"""
    text = "üíï **–ì–∞–π–¥—ã**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏ —Å–∫–∞—á–∞–π—Ç–µ –≥–∞–π–¥"
    
    try:
        # –ï—Å–ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ - –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, —É–¥–∞–ª—è–µ–º
        if callback.message.video:
            await callback.message.delete()
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=get_guides_list_keyboard(),
                parse_mode="Markdown"
            )
        else:
            # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç - –ø—Ä–æ–±—É–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            await callback.message.edit_text(
                text,
                reply_markup=get_guides_list_keyboard(),
                parse_mode="Markdown"
            )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=get_guides_list_keyboard(),
            parse_mode="Markdown"
        )
    await callback.answer()


@router.callback_query(F.data.startswith("guide_"))
async def show_guide(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –≥–∞–π–¥–µ"""
    guide_id = callback.data.replace("guide_", "")
    
    # –ù–∞—Ö–æ–¥–∏–º –≥–∞–π–¥ –≤ JSON
    guide = get_guide_by_id(guide_id)
    
    if not guide or not guide.get('is_active', True):
        await callback.answer("–ì–∞–π–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return
    
    # –ì–∞–π–¥—ã –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞
    has_file = bool(guide.get('file_id'))
    related_course_slug = guide.get('related_course_slug')
    
    await callback.message.edit_text(
        guide.get('description') or guide['name'],
        reply_markup=get_guide_keyboard(guide_id, has_file, related_course_slug),
        parse_mode="Markdown"
    )
    await callback.answer()


@router.callback_query(F.data.startswith("download_guide_"))
async def download_guide(callback: CallbackQuery):
    """–°–∫–∞—á–∞—Ç—å –≥–∞–π–¥ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)"""
    guide_id = callback.data.replace("download_guide_", "")
    
    # –ù–∞—Ö–æ–¥–∏–º –≥–∞–π–¥ –≤ JSON
    guide = get_guide_by_id(guide_id)
    
    if not guide or not guide.get('is_active', True):
        await callback.answer("–ì–∞–π–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return
    
    file_id = guide.get('file_id')
    
    if not file_id:
        await callback.answer("–§–∞–π–ª –≥–∞–π–¥–∞ –ø–æ–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –°–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è!", show_alert=True)
        return
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        buttons = []
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–π –∫—É—Ä—Å, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ—Ö–æ–¥–∞
        if guide.get('related_course_slug'):
            course = get_course_by_slug(guide['related_course_slug'])
            if course:
                button_text = f"{course.get('emoji', 'üìö')} –ö—É—Ä—Å ¬´{course['name']}¬ª"
            else:
                button_text = "üìö –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫—É—Ä—Å—É"
            
            buttons.append([InlineKeyboardButton(
                text=button_text,
                callback_data=f"course_{guide['related_course_slug']}"
            )])
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ - –∏—Å–ø–æ–ª—å–∑—É–µ–º back_navigation –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
        buttons.append([
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_navigation"),
            InlineKeyboardButton(text="üè† –í –º–µ–Ω—é", callback_data="main_menu")
        ])
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
        try:
            await callback.message.delete()
        except Exception:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —Å –∫–Ω–æ–ø–∫–∞–º–∏
        await callback.message.answer_document(
            document=file_id,
            caption=f"{guide.get('emoji') or 'üíù'} {guide['name']}",
            reply_markup=keyboard
        )
        
        await callback.answer("–ì–∞–π–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    
    except Exception as e:
        await callback.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {str(e)}", show_alert=True)


@router.callback_query(F.data == "mini_course")
async def show_mini_course(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∏–Ω–∏-–∫—É—Ä—Å–µ - –≤—Å—ë –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏"""
    mini_course = get_mini_course()
    
    if not mini_course or not mini_course.get('is_active', False):
        await callback.answer("–ú–∏–Ω–∏-–∫—É—Ä—Å –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", show_alert=True)
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    text = f"{mini_course['emoji']} {mini_course['title']}\n"
    text += f"{mini_course['subtitle']}\n\n"
    text += f"üìÖ –°—Ç–∞—Ä—Ç: {mini_course['start_date']}\n\n"
    text += f"{mini_course['description']}\n\n"
    
    # –ü—Ä–æ–≥—Ä–∞–º–º–∞
    text += "üìã **–ü—Ä–æ–≥—Ä–∞–º–º–∞:**\n\n"
    for day_info in mini_course.get('program', []):
        text += f"{day_info['emoji']} –î–µ–Ω—å {day_info['day']}. {day_info['title']}\n"
        text += f"{day_info['description']}\n"
        text += f"‚ú® {day_info['practice']}\n\n"
    
    # –ß—Ç–æ –ø–æ–ª—É—á–∏—à—å
    text += "üíé **–í –∏—Ç–æ–≥–µ —Ç—ã –ø–æ–ª—É—á–∏—à—å:**\n\n"
    for benefit in mini_course.get('benefits', []):
        text += f"‚úîÔ∏è {benefit}\n"
    text += f"\n{mini_course.get('format', '')}"
    
    try:
        # –ï—Å–ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if callback.message.video:
            await callback.message.delete()
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=get_mini_course_keyboard(),
                parse_mode="Markdown"
            )
        else:
            # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º
            await callback.message.edit_text(
                text,
                reply_markup=get_mini_course_keyboard(),
                parse_mode="Markdown"
            )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=get_mini_course_keyboard(),
            parse_mode="Markdown"
        )
    
    await callback.answer()


@router.callback_query(F.data == "mini_course_about")
async def show_mini_course_about(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–¥–µ–ª '–û –∫—É—Ä—Å–µ' - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫"""
    await show_mini_course(callback)


@router.callback_query(F.data == "mini_course_program")
async def show_mini_course_program(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–¥–µ–ª '–ü—Ä–æ–≥—Ä–∞–º–º–∞' - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫"""
    await show_mini_course(callback)


@router.callback_query(F.data == "mini_course_price")
async def show_mini_course_price(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏"""
    mini_course = get_mini_course()
    
    if not mini_course or not mini_course.get('is_active', False):
        await callback.answer("–ú–∏–Ω–∏-–∫—É—Ä—Å –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", show_alert=True)
        return
    
    tariffs = mini_course.get('tariffs', [])
    
    if not tariffs:
        await callback.answer("–¢–∞—Ä–∏—Ñ—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", show_alert=True)
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ç–∞—Ä–∏—Ñ–æ–≤
    text = f"üí∞ **–°—Ç–æ–∏–º–æ—Å—Ç—å —É—á–∞—Å—Ç–∏—è**\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º —Ç–∞—Ä–∏—Ñ–µ
    for tariff in tariffs:
        emoji = tariff.get('emoji', 'üìö')
        name = tariff.get('name', '')
        price = tariff.get('price', 0)
        
        text += f"{emoji} **{name}** ‚Äî {price} ‚ÇΩ\n\n"
        text += "–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç:\n"
        for feature in tariff.get('features', []):
            text += f"‚úîÔ∏è {feature}\n"
        text += "\n"
    
    text += f"{mini_course.get('summary', '')}\n\n"
    text += "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç –æ–±—É—á–µ–Ω–∏—è:"
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏
    buttons = []
    for tariff in tariffs:
        emoji = tariff.get('emoji', 'üìö')
        name = tariff.get('name', '')
        price = tariff.get('price', 0)
        tariff_id = tariff.get('id', '')
        
        buttons.append([InlineKeyboardButton(
            text=f"{emoji} {name} ‚Äî {price} ‚ÇΩ",
            callback_data=f"tariff_mini_course_{tariff_id}"
        )])
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    buttons.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_navigation")])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    
    try:
        await callback.message.edit_text(
            text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
    
    await callback.answer()


@router.callback_query(F.data == "mini_course_register")
async def show_mini_course_tariff_selection(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –º–∏–Ω–∏-–∫—É—Ä—Å - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"""
    await show_mini_course_price(callback)


@router.callback_query(F.data == "webinar")
async def show_webinar(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ–±–∏–Ω–∞—Ä–µ"""
    db = await get_db()
    user_repo = UserRepository(db)
    await user_repo.update_activity(callback.from_user.id)
    
    # –¢–µ–∫—Å—Ç –æ –≤–µ–±–∏–Ω–∞—Ä–µ (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –Ω—É–∂–Ω—ã–π)
    text = """üé• **–í–µ–±–∏–Ω–∞—Ä**

–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –≤–µ–±–∏–Ω–∞—Ä–∞—Ö.

–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!"""
    
    try:
        # –ï—Å–ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if callback.message.video:
            await callback.message.delete()
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=text,
                reply_markup=get_back_keyboard(),
                parse_mode="Markdown"
            )
        else:
            # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º
            await callback.message.edit_text(
                text,
                reply_markup=get_back_keyboard(),
                parse_mode="Markdown"
            )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=get_back_keyboard(),
            parse_mode="Markdown"
        )
    
    await callback.answer()


@router.callback_query(F.data == "support")
async def show_support(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ"""
    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db = await get_db()
    user_repo = UserRepository(db)
    await user_repo.update_activity(callback.from_user.id)
    
    text = f"""üí¨ **–ü–æ–¥–¥–µ—Ä–∂–∫–∞**

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏:

üì± **Telegram:** @{config.CONSULTATION_TELEGRAM}

–ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.

üïê **–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏:**
–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞: 10:00 - 19:00 (–ú–°–ö)
–°—É–±–±–æ—Ç–∞ - –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: –≤—ã—Ö–æ–¥–Ω–æ–π

–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –Ω–∞—à–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã –¥—Ä—É–≥–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã."""
    
    try:
        await callback.message.edit_text(
            text,
            reply_markup=get_back_keyboard(),
            parse_mode="Markdown"
        )
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å - —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        try:
            await callback.message.delete()
        except Exception:
            pass
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=text,
            reply_markup=get_back_keyboard(),
            parse_mode="Markdown"
        )
    
    await callback.answer()
