"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ"""
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import StateFilter

from config import config
from keyboards.keyboards import get_video_settings_keyboard, get_back_to_admin_keyboard, get_back_to_free_course_keyboard
from utils.bot_settings import (
    get_setting, set_setting, delete_setting, 
    WELCOME_VIDEO_KEY, is_admin
)

router = Router()

# –ö–ª—é—á–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ –∏ —Ñ–æ—Ç–æ –≤ –ë–î
FREE_COURSE_ZET9_VIDEO_KEY = "free_course_zet9_video"
FREE_COURSE_STEP3_PHOTOS_KEY = "free_course_step3_photos"
FREE_COURSE_STEP3_VIDEO_KEY = "free_course_step3_video"
FREE_COURSE_FINAL_MESSAGE_KEY = "free_course_final_message"

# –ö–ª—é—á–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤ —à–∞–≥–æ–≤
FREE_COURSE_STEP1_TEXT_KEY = "free_course_step1_text"
FREE_COURSE_STEP2_TEXT_KEY = "free_course_step2_text"
FREE_COURSE_STEP3_TEXT_KEY = "free_course_step3_text"


class VideoUpload(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ"""
    waiting_for_welcome_video = State()
    waiting_for_zet9_video = State()
    waiting_for_step3_photos = State()
    waiting_for_step3_video = State()
    waiting_for_final_message = State()
    waiting_for_step1_text = State()
    waiting_for_step2_text = State()
    waiting_for_step3_text = State()


@router.callback_query(F.data == "admin_video_settings")
async def show_video_settings(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–µ–æ"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∏–¥–µ–æ –≤ –ë–î
    welcome_video = await get_setting(WELCOME_VIDEO_KEY)
    zet9_video = await get_setting(FREE_COURSE_ZET9_VIDEO_KEY)
    step3_photos = await get_setting(FREE_COURSE_STEP3_PHOTOS_KEY)
    step3_video = await get_setting(FREE_COURSE_STEP3_VIDEO_KEY)
    final_message = await get_setting(FREE_COURSE_FINAL_MESSAGE_KEY)
    
    has_welcome = bool(welcome_video)
    has_zet9 = bool(zet9_video)
    has_step3_photos = bool(step3_photos)
    has_step3_video = bool(step3_video)
    has_final_message = bool(final_message)
    
    text = "üé• <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–µ–æ –∏ —Ñ–æ—Ç–æ</b>\n\n"
    text += "<b>–û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥–µ–æ:</b>\n"
    
    if has_welcome:
        text += "‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ\n"
    else:
        text += "‚ùå –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ\n"
    
    text += "\n<b>–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å - –®–∞–≥ 3 (–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è Sotis):</b>\n"
    
    if has_step3_photos:
        import json
        try:
            photos = json.loads(step3_photos)
            text += f"‚úÖ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ({len(photos)} —à—Ç.)\n"
        except:
            text += "‚úÖ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ\n"
    else:
        text += "‚ùå –§–æ—Ç–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ\n"
    
    if has_step3_video:
        text += "‚úÖ –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ\n"
    else:
        text += "‚ùå –í–∏–¥–µ–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ\n"
    
    text += "\n<b>–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏ '–ü–æ–ª—É—á–∏–ª–æ—Å—å'):</b>\n"
    
    if has_final_message:
        text += "‚úÖ –¢–µ–∫—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω\n"
    else:
        text += "‚ùå –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç\n"
    
    text += "\nüí° –î–ª—è —à–∞–≥–∞ 3 –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–∏–±–æ —Ñ–æ—Ç–æ (–Ω–µ—Å–∫–æ–ª—å–∫–æ), –ª–∏–±–æ –≤–∏–¥–µ–æ"
    text += "\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    try:
        await callback.message.edit_text(
            text,
            reply_markup=get_video_settings_keyboard(has_welcome, has_step3_photos, has_step3_video, has_final_message)
        )
    except Exception:
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
        pass
    
    await callback.answer()


# ===== –ü–†–ò–í–ï–¢–°–¢–í–ï–ù–ù–û–ï –í–ò–î–ï–û =====

@router.callback_query(F.data == "video_welcome_upload")
async def upload_welcome_video(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    await callback.message.edit_text(
        "üì§ <b>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /start\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã",
        reply_markup=get_back_to_admin_keyboard()
    )
    await state.set_state(VideoUpload.waiting_for_welcome_video)
    await callback.answer()


@router.message(VideoUpload.waiting_for_welcome_video, F.video)
async def save_welcome_video(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ"""
    if not is_admin(message.from_user.id):
        return
    
    file_id = message.video.file_id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    success = await set_setting(WELCOME_VIDEO_KEY, file_id)
    
    if success:
        await message.answer(
            "‚úÖ <b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!</b>\n\n"
            f"File ID: <code>{file_id}</code>\n\n"
            "–¢–µ–ø–µ—Ä—å —ç—Ç–æ –≤–∏–¥–µ–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start",
            reply_markup=get_back_to_admin_keyboard()
        )
    else:
        await message.answer(
            "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∏–¥–µ–æ</b>\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑",
            reply_markup=get_back_to_admin_keyboard()
        )
    
    await state.clear()


@router.message(VideoUpload.waiting_for_welcome_video)
async def invalid_welcome_video(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞"""
    if not is_admin(message.from_user.id):
        return
    
    await message.answer(
        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ (–Ω–µ —Å—Å—ã–ª–∫—É, –Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç)\n\n"
        "–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã"
    )


@router.callback_query(F.data == "video_welcome_delete")
async def delete_welcome_video(callback: CallbackQuery):
    """–£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    success = await delete_setting(WELCOME_VIDEO_KEY)
    
    if success:
        await callback.answer("‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ —É–¥–∞–ª–µ–Ω–æ")
        # –û–±–Ω–æ–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω —Å –Ω–æ–≤—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
        await show_video_settings(callback)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏", show_alert=True)


# ===== –í–ò–î–ï–û ZET 9 (–ë–ï–°–ü–õ–ê–¢–ù–´–ô –ö–£–†–°) =====

@router.callback_query(F.data == "video_zet9_upload")
async def upload_zet9_video(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ ZET 9"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    await callback.message.edit_text(
        "üì§ <b>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ '–ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ZET 9'</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –Ω–∞ 3-–º —à–∞–≥–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã",
        reply_markup=get_back_to_admin_keyboard()
    )
    await state.set_state(VideoUpload.waiting_for_zet9_video)
    await callback.answer()


@router.message(VideoUpload.waiting_for_zet9_video, F.video)
async def save_zet9_video(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∏–¥–µ–æ ZET 9"""
    if not is_admin(message.from_user.id):
        return
    
    file_id = message.video.file_id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    success = await set_setting(FREE_COURSE_ZET9_VIDEO_KEY, file_id)
    
    if success:
        await message.answer(
            "‚úÖ <b>–í–∏–¥–µ–æ ZET 9 —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!</b>\n\n"
            f"File ID: <code>{file_id}</code>\n\n"
            "–¢–µ–ø–µ—Ä—å —ç—Ç–æ –≤–∏–¥–µ–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–∞ 3-–º —à–∞–≥–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞",
            reply_markup=get_back_to_admin_keyboard()
        )
    else:
        await message.answer(
            "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∏–¥–µ–æ</b>\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑",
            reply_markup=get_back_to_admin_keyboard()
        )
    
    await state.clear()


@router.message(VideoUpload.waiting_for_zet9_video)
async def invalid_zet9_video(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–ª—è –≤–∏–¥–µ–æ ZET 9"""
    if not is_admin(message.from_user.id):
        return
    
    await message.answer(
        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ (–Ω–µ —Å—Å—ã–ª–∫—É, –Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç)\n\n"
        "–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã"
    )


@router.callback_query(F.data == "video_zet9_delete")
async def delete_zet9_video(callback: CallbackQuery):
    """–£–¥–∞–ª–∏—Ç—å –≤–∏–¥–µ–æ ZET 9"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    success = await delete_setting(FREE_COURSE_ZET9_VIDEO_KEY)
    
    if success:
        await callback.answer("‚úÖ –í–∏–¥–µ–æ ZET 9 —É–¥–∞–ª–µ–Ω–æ")
        # –û–±–Ω–æ–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω —Å –Ω–æ–≤—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
        await show_video_settings(callback)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏", show_alert=True)


# ===== –§–û–¢–û –î–õ–Ø –®–ê–ì–ê 3 (–ò–ù–°–¢–†–£–ö–¶–ò–Ø SOTIS) =====

@router.callback_query(F.data == "video_step3_photos_upload")
async def upload_step3_photos(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ –¥–ª—è —à–∞–≥–∞ 3"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    await callback.message.edit_text(
        "üì§ <b>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –¥–ª—è —à–∞–≥–∞ 3 '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è Sotis'</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ). –û–Ω–∏ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –Ω–∞ 3-–º —à–∞–≥–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞.\n\n"
        "–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /done\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã",
        reply_markup=get_back_to_free_course_keyboard()
    )
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ñ–æ—Ç–æ
    await state.update_data(photos=[])
    await state.set_state(VideoUpload.waiting_for_step3_photos)
    await callback.answer()


@router.message(VideoUpload.waiting_for_step3_photos, F.photo)
async def save_step3_photo(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–æ—Ç–æ –¥–ª—è —à–∞–≥–∞ 3"""
    if not is_admin(message.from_user.id):
        return
    
    file_id = message.photo[-1].file_id
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ
    data = await state.get_data()
    photos = data.get('photos', [])
    photos.append(file_id)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
    await state.update_data(photos=photos)
    
    await message.answer(
        f"‚úÖ –§–æ—Ç–æ {len(photos)} –¥–æ–±–∞–≤–ª–µ–Ω–æ!\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â–µ —Ñ–æ—Ç–æ –∏–ª–∏ /done –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"
    )


@router.message(VideoUpload.waiting_for_step3_photos, F.text == "/done")
async def finish_step3_photos(message: Message, state: FSMContext):
    """–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ –¥–ª—è —à–∞–≥–∞ 3"""
    if not is_admin(message.from_user.id):
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ
    data = await state.get_data()
    photos = data.get('photos', [])
    
    if not photos:
        await message.answer(
            "‚ùå –í—ã –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã"
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î –∫–∞–∫ JSON
    import json
    photos_json = json.dumps(photos)
    success = await set_setting(FREE_COURSE_STEP3_PHOTOS_KEY, photos_json)
    
    if success:
        await message.answer(
            f"‚úÖ <b>–£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(photos)} —Ñ–æ—Ç–æ!</b>\n\n"
            "–¢–µ–ø–µ—Ä—å –æ–Ω–∏ –±—É–¥—É—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –Ω–∞ 3-–º —à–∞–≥–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞",
            reply_markup=get_back_to_free_course_keyboard()
        )
    else:
        await message.answer(
            "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ</b>\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑",
            reply_markup=get_back_to_admin_keyboard()
        )
    
    await state.clear()


@router.message(VideoUpload.waiting_for_step3_photos)
async def invalid_step3_photo(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–ª—è —Ñ–æ—Ç–æ —à–∞–≥–∞ 3"""
    if not is_admin(message.from_user.id):
        return
    
    await message.answer(
        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ\n\n"
        "–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /done –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\n"
        "–ò–ª–∏ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã"
    )


@router.callback_query(F.data == "video_step3_photos_delete")
async def delete_step3_photos(callback: CallbackQuery):
    """–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ —à–∞–≥–∞ 3"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    success = await delete_setting(FREE_COURSE_STEP3_PHOTOS_KEY)
    
    if success:
        await callback.answer("‚úÖ –§–æ—Ç–æ —É–¥–∞–ª–µ–Ω—ã")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º –∫—É—Ä—Å–æ–º
        from handlers.admin import manage_free_course
        await manage_free_course(callback)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏", show_alert=True)


# ===== –í–ò–î–ï–û –î–õ–Ø –®–ê–ì–ê 3 (–ò–ù–°–¢–†–£–ö–¶–ò–Ø SOTIS) =====

@router.callback_query(F.data == "video_step3_video_upload")
async def upload_step3_video(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ –¥–ª—è —à–∞–≥–∞ 3"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    await callback.message.edit_text(
        "üì§ <b>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –¥–ª—è —à–∞–≥–∞ 3 '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è Sotis'</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –Ω–∞ 3-–º —à–∞–≥–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã",
        reply_markup=get_back_to_free_course_keyboard()
    )
    await state.set_state(VideoUpload.waiting_for_step3_video)
    await callback.answer()


@router.message(VideoUpload.waiting_for_step3_video, F.video)
async def save_step3_video(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∏–¥–µ–æ –¥–ª—è —à–∞–≥–∞ 3"""
    if not is_admin(message.from_user.id):
        return
    
    file_id = message.video.file_id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    success = await set_setting(FREE_COURSE_STEP3_VIDEO_KEY, file_id)
    
    if success:
        await message.answer(
            "‚úÖ <b>–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!</b>\n\n"
            f"File ID: <code>{file_id}</code>\n\n"
            "–¢–µ–ø–µ—Ä—å —ç—Ç–æ –≤–∏–¥–µ–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–∞ 3-–º —à–∞–≥–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞",
            reply_markup=get_back_to_free_course_keyboard()
        )
    else:
        await message.answer(
            "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∏–¥–µ–æ</b>\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑",
            reply_markup=get_back_to_admin_keyboard()
        )
    
    await state.clear()


@router.message(VideoUpload.waiting_for_step3_video)
async def invalid_step3_video(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–ª—è –≤–∏–¥–µ–æ —à–∞–≥–∞ 3"""
    if not is_admin(message.from_user.id):
        return
    
    await message.answer(
        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ (–Ω–µ —Å—Å—ã–ª–∫—É, –Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç)\n\n"
        "–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã"
    )


@router.callback_query(F.data == "video_step3_video_delete")
async def delete_step3_video(callback: CallbackQuery):
    """–£–¥–∞–ª–∏—Ç—å –≤–∏–¥–µ–æ —à–∞–≥–∞ 3"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    success = await delete_setting(FREE_COURSE_STEP3_VIDEO_KEY)
    
    if success:
        await callback.answer("‚úÖ –í–∏–¥–µ–æ —É–¥–∞–ª–µ–Ω–æ")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º –∫—É—Ä—Å–æ–º
        from handlers.admin import manage_free_course
        await manage_free_course(callback)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏", show_alert=True)


# ===== –§–ò–ù–ê–õ–¨–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï (–ü–û–°–õ–ï –ö–ù–û–ü–ö–ò "–ü–û–õ–£–ß–ò–õ–û–°–¨") =====

@router.callback_query(F.data == "free_course_final_message_edit")
async def edit_final_message(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç
    current_text = await get_setting(FREE_COURSE_FINAL_MESSAGE_KEY)
    
    text = "‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è</b>\n\n"
    
    if current_text:
        text += "üìù <b>–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç:</b>\n"
        text += f"<code>{current_text[:500]}...</code>\n\n" if len(current_text) > 500 else f"<code>{current_text}</code>\n\n"
    else:
        text += "üìù –°–µ–π—á–∞—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç\n\n"
    
    text += "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫–æ—Ç–æ—Ä–æ–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏ '–ü–æ–ª—É—á–∏–ª–æ—Å—å')\n\n"
    text += "üí° –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–æ–¥–∑–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n"
    text += "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã"
    
    await callback.message.edit_text(
        text,
        reply_markup=get_back_to_free_course_keyboard()
    )
    await state.set_state(VideoUpload.waiting_for_final_message)
    await callback.answer()


@router.message(VideoUpload.waiting_for_final_message, F.text)
async def save_final_message(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    if not is_admin(message.from_user.id):
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∫–æ–º–∞–Ω–¥–∞ –ª–∏ —ç—Ç–æ
    if message.text.startswith('/'):
        return
    
    new_text = message.text
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    success = await set_setting(FREE_COURSE_FINAL_MESSAGE_KEY, new_text)
    
    if success:
        preview = new_text[:200] + "..." if len(new_text) > 200 else new_text
        await message.answer(
            f"‚úÖ <b>–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!</b>\n\n"
            f"üìù <b>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:</b>\n{preview}\n\n"
            "–¢–µ–ø–µ—Ä—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏ '–ü–æ–ª—É—á–∏–ª–æ—Å—å'",
            reply_markup=get_back_to_free_course_keyboard()
        )
    else:
        await message.answer(
            "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞</b>\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑",
            reply_markup=get_back_to_admin_keyboard()
        )
    
    await state.clear()


@router.callback_query(F.data == "free_course_final_message_delete")
async def delete_final_message(callback: CallbackQuery):
    """–£–¥–∞–ª–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É)"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    success = await delete_setting(FREE_COURSE_FINAL_MESSAGE_KEY)
    
    if success:
        await callback.answer("‚úÖ –¢–µ–∫—Å—Ç —É–¥–∞–ª–µ–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º –∫—É—Ä—Å–æ–º
        from handlers.admin import manage_free_course
        await manage_free_course(callback)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏", show_alert=True)


# ===== –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –¢–ï–ö–°–¢–û–í –®–ê–ì–û–í =====

# –®–ê–ì 1
@router.callback_query(F.data == "free_course_step1_edit")
async def edit_step1_text(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –®–∞–≥–∞ 1"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    current_text = await get_setting(FREE_COURSE_STEP1_TEXT_KEY)
    
    text = "‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –®–∞–≥–∞ 1 (–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ)</b>\n\n"
    
    if current_text:
        text += f"üìù <b>–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç:</b>\n<code>{current_text[:300]}...</code>\n\n" if len(current_text) > 300 else f"üìù <b>–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç:</b>\n<code>{current_text}</code>\n\n"
    else:
        text += "üìù –°–µ–π—á–∞—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç\n\n"
    
    text += "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –®–∞–≥–∞ 1\n\n"
    text += "üí° –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–æ–¥–∑–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
    text += "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã"
    
    await callback.message.edit_text(text, reply_markup=get_back_to_free_course_keyboard())
    await state.set_state(VideoUpload.waiting_for_step1_text)
    await callback.answer()


@router.message(VideoUpload.waiting_for_step1_text, F.text)
async def save_step1_text(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –®–∞–≥–∞ 1"""
    if not is_admin(message.from_user.id):
        return
    
    if message.text.startswith('/'):
        return
    
    success = await set_setting(FREE_COURSE_STEP1_TEXT_KEY, message.text)
    
    if success:
        preview = message.text[:200] + "..." if len(message.text) > 200 else message.text
        await message.answer(
            f"‚úÖ <b>–¢–µ–∫—Å—Ç –®–∞–≥–∞ 1 —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!</b>\n\n"
            f"üìù <b>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:</b>\n{preview}",
            reply_markup=get_back_to_free_course_keyboard()
        )
    else:
        await message.answer(
            "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏</b>\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑",
            reply_markup=get_back_to_admin_keyboard()
        )
    
    await state.clear()


@router.callback_query(F.data == "free_course_step1_delete")
async def delete_step1_text(callback: CallbackQuery):
    """–£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—Å—Ç –®–∞–≥–∞ 1"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    success = await delete_setting(FREE_COURSE_STEP1_TEXT_KEY)
    
    if success:
        await callback.answer("‚úÖ –¢–µ–∫—Å—Ç –®–∞–≥–∞ 1 —Å–±—Ä–æ—à–µ–Ω")
        from handlers.admin import manage_free_course
        await manage_free_course(callback)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏", show_alert=True)


# –®–ê–ì 2
@router.callback_query(F.data == "free_course_step2_edit")
async def edit_step2_text(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –®–∞–≥–∞ 2"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    current_text = await get_setting(FREE_COURSE_STEP2_TEXT_KEY)
    
    text = "‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –®–∞–≥–∞ 2 (–ü—Ä–æ–≥—Ä–∞–º–º—ã)</b>\n\n"
    
    if current_text:
        text += f"üìù <b>–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç:</b>\n<code>{current_text[:300]}...</code>\n\n" if len(current_text) > 300 else f"üìù <b>–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç:</b>\n<code>{current_text}</code>\n\n"
    else:
        text += "üìù –°–µ–π—á–∞—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç\n\n"
    
    text += "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –®–∞–≥–∞ 2\n\n"
    text += "üí° –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–æ–¥–∑–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
    text += "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã"
    
    await callback.message.edit_text(text, reply_markup=get_back_to_free_course_keyboard())
    await state.set_state(VideoUpload.waiting_for_step2_text)
    await callback.answer()


@router.message(VideoUpload.waiting_for_step2_text, F.text)
async def save_step2_text(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –®–∞–≥–∞ 2"""
    if not is_admin(message.from_user.id):
        return
    
    if message.text.startswith('/'):
        return
    
    success = await set_setting(FREE_COURSE_STEP2_TEXT_KEY, message.text)
    
    if success:
        preview = message.text[:200] + "..." if len(message.text) > 200 else message.text
        await message.answer(
            f"‚úÖ <b>–¢–µ–∫—Å—Ç –®–∞–≥–∞ 2 —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!</b>\n\n"
            f"üìù <b>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:</b>\n{preview}",
            reply_markup=get_back_to_free_course_keyboard()
        )
    else:
        await message.answer(
            "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏</b>\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑",
            reply_markup=get_back_to_admin_keyboard()
        )
    
    await state.clear()


@router.callback_query(F.data == "free_course_step2_delete")
async def delete_step2_text(callback: CallbackQuery):
    """–£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—Å—Ç –®–∞–≥–∞ 2"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    success = await delete_setting(FREE_COURSE_STEP2_TEXT_KEY)
    
    if success:
        await callback.answer("‚úÖ –¢–µ–∫—Å—Ç –®–∞–≥–∞ 2 —Å–±—Ä–æ—à–µ–Ω")
        from handlers.admin import manage_free_course
        await manage_free_course(callback)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏", show_alert=True)


# –®–ê–ì 3
@router.callback_query(F.data == "free_course_step3_edit")
async def edit_step3_text(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –®–∞–≥–∞ 3"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    current_text = await get_setting(FREE_COURSE_STEP3_TEXT_KEY)
    
    text = "‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –®–∞–≥–∞ 3 (–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è Sotis)</b>\n\n"
    
    if current_text:
        text += f"üìù <b>–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç:</b>\n<code>{current_text[:300]}...</code>\n\n" if len(current_text) > 300 else f"üìù <b>–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç:</b>\n<code>{current_text}</code>\n\n"
    else:
        text += "üìù –°–µ–π—á–∞—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç\n\n"
    
    text += "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –®–∞–≥–∞ 3\n\n"
    text += "üí° –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–æ–¥–∑–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
    text += "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã"
    
    await callback.message.edit_text(text, reply_markup=get_back_to_free_course_keyboard())
    await state.set_state(VideoUpload.waiting_for_step3_text)
    await callback.answer()


@router.message(VideoUpload.waiting_for_step3_text, F.text)
async def save_step3_text(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –®–∞–≥–∞ 3"""
    if not is_admin(message.from_user.id):
        return
    
    if message.text.startswith('/'):
        return
    
    success = await set_setting(FREE_COURSE_STEP3_TEXT_KEY, message.text)
    
    if success:
        preview = message.text[:200] + "..." if len(message.text) > 200 else message.text
        await message.answer(
            f"‚úÖ <b>–¢–µ–∫—Å—Ç –®–∞–≥–∞ 3 —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!</b>\n\n"
            f"üìù <b>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:</b>\n{preview}",
            reply_markup=get_back_to_free_course_keyboard()
        )
    else:
        await message.answer(
            "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏</b>\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑",
            reply_markup=get_back_to_admin_keyboard()
        )
    
    await state.clear()


@router.callback_query(F.data == "free_course_step3_delete")
async def delete_step3_text(callback: CallbackQuery):
    """–£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—Å—Ç –®–∞–≥–∞ 3"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
        return
    
    success = await delete_setting(FREE_COURSE_STEP3_TEXT_KEY)
    
    if success:
        await callback.answer("‚úÖ –¢–µ–∫—Å—Ç –®–∞–≥–∞ 3 —Å–±—Ä–æ—à–µ–Ω")
        from handlers.admin import manage_free_course
        await manage_free_course(callback)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏", show_alert=True)


# ===== –û–¢–ú–ï–ù–ê =====

@router.message(F.text == "/cancel", StateFilter(VideoUpload))
async def cancel_upload(message: Message, state: FSMContext):
    """–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ"""
    if not is_admin(message.from_user.id):
        return
    
    await state.clear()
    await message.answer(
        "‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞",
        reply_markup=get_back_to_admin_keyboard()
    )

